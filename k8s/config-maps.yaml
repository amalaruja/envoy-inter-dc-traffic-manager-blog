apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-dc-1
data:
  config.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value:  8080
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_all
              route_config:
                name: ingress_all_routes
                virtual_hosts:
                - name: dc-1
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/hello-rest-service/hello"
                    route:
                      cluster: http-dc-1
                  - match:
                      prefix: "/HelloGrpcService/Hello"
                    route:
                      cluster: grpc-dc-1
              access_log:
                - name: envoy.access_loggers.file
                  filter:
                    not_health_check_filter: {}
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                    log_format:
                      json_format:
                        timestamp: "%START_TIME%"
                        protocol: "%PROTOCOL%"
                        requestMethod: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                        duration: "%DURATION%"
                        responseCode: "%RESPONSE_CODE%"
                        reponseFlags: "%RESPONSE_FLAGS%"
                        bytesReceived: "%BYTES_RECEIVED%"
                        bytesSent: "%BYTES_SENT%"
                        requestForwadedFor: "%REQ(X-FORWARDED-FOR)%"
                        requestId: "%REQ(X-REQUEST-ID)%"
                        authority: "%REQ(:AUTHORITY)%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        upstreamHost: "%UPSTREAM_HOST%"
              http_filters:
              - name: envoy.filters.http.router
      clusters:
      - name: http-dc-1
        connect_timeout: 10s
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 2
            keepalive_time: 1
            keepalive_interval: 10
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        protocol_selection: USE_DOWNSTREAM_PROTOCOL
        load_assignment:
          cluster_name: http-dc-1
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: rest-dc-1.default.svc.cluster.local
                    port_value: 8080
      - name: grpc-dc-1
        connect_timeout: 10s
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 2
            keepalive_time: 1
            keepalive_interval: 10
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        protocol_selection: USE_DOWNSTREAM_PROTOCOL
        load_assignment:
          cluster_name: grpc-dc-1
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: grpc-dc-1.default.svc.cluster.local
                    port_value: 3000
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-dc-2
data:
  config.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value:  8080
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_all
              route_config:
                name: ingress_all_routes
                virtual_hosts:
                - name: dc-2
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/hello-rest-service/hello"
                    route:
                      cluster: http-dc-2
                  - match:
                      prefix: "/HelloGrpcService/Hello"
                    route:
                      cluster: grpc-dc-2
              access_log:
                - name: envoy.access_loggers.file
                  filter:
                    not_health_check_filter: {}
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                    log_format:
                      json_format:
                        timestamp: "%START_TIME%"
                        protocol: "%PROTOCOL%"
                        requestMethod: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                        duration: "%DURATION%"
                        responseCode: "%RESPONSE_CODE%"
                        reponseFlags: "%RESPONSE_FLAGS%"
                        bytesReceived: "%BYTES_RECEIVED%"
                        bytesSent: "%BYTES_SENT%"
                        requestForwadedFor: "%REQ(X-FORWARDED-FOR)%"
                        requestId: "%REQ(X-REQUEST-ID)%"
                        authority: "%REQ(:AUTHORITY)%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        upstreamHost: "%UPSTREAM_HOST%"
              http_filters:
              - name: envoy.filters.http.router
      clusters:
      - name: http-dc-2
        connect_timeout: 10s
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 2
            keepalive_time: 1
            keepalive_interval: 10
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        protocol_selection: USE_DOWNSTREAM_PROTOCOL
        load_assignment:
          cluster_name: http-dc-2
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: rest-dc-2.default.svc.cluster.local
                    port_value: 8080
      - name: grpc-dc-2
        connect_timeout: 10s
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 2
            keepalive_time: 1
            keepalive_interval: 10
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        protocol_selection: USE_DOWNSTREAM_PROTOCOL
        load_assignment:
          cluster_name: grpc-dc-2
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: grpc-dc-2.default.svc.cluster.local
                    port_value: 3000
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
---